package org.deschaefer.euler.solutions;

/**
 * Even Fibonacci numbers
 * Problem 2
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * <p>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */
final class ProblemTwo {

    /**
     * private constructor
     */
    private ProblemTwo() {
    }

    /**
     * @param args command line params
     */
    public static void main(final String[] args) {
        System.out.println(solve());
    }

    /**
     * solve the problem
     *
     * @return the answer
     */
    private static String solve() {

        long prior = 0;
        long fib = 1;

        long result = 0;

        while (fib < 4000000) {
            long tempPrior = fib;
            fib = fib + prior;
            prior = tempPrior;

            if (fib % 2 == 0) {
                System.out.println(fib);
                result += fib;
            }
        }
        return Double.toString(result);
    }
}
